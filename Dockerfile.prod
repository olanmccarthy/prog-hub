# --- Build stage ---
FROM node:20-alpine AS builder
WORKDIR /app

# Copy only package files and install
COPY package*.json ./
RUN npm ci

# Copy source and build
COPY . .
# Generate Prisma client before building
RUN npx prisma generate
# Build without turbopack for production compatibility
RUN npx next build

# --- Production stage ---
FROM node:20-alpine
WORKDIR /app

# Copy package.json for metadata (optional)
COPY package*.json ./

# Copy the built app and node_modules from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules ./node_modules

# Copy Prisma schema and migrations for runtime database operations
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Copy data directory for test deck files
COPY --from=builder /app/data ./data

# Create startup script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "Waiting for database..."' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'echo "Running Prisma DB push..."' >> /app/start.sh && \
    echo 'npx prisma db push --skip-generate' >> /app/start.sh && \
    echo 'echo "Starting Next.js..."' >> /app/start.sh && \
    echo 'npm start' >> /app/start.sh && \
    chmod +x /app/start.sh

# Expose and start
EXPOSE 3000
CMD ["/app/start.sh"]
